{"version":3,"sources":["logo.svg","Algorithm/SelectionSort.js","Algorithm/MergeSort.js","Component/Visualizer.jsx","Component/Mobile_visualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["selection","array","animation","i","length","min","j","push","temp","console","log","getMergeSortAnimations","auxilaryArray","slice","mergesortHelper","mainArray","startIdx","endIdx","middle","Math","floor","middleIdx","k","domerge","Visualizer","props","state","selectSpeedType","selectAlgo","Array_bar_width","slider_value","select1","select2","event","num","target","value","this","setState","resetArray","max","document","getElementById","random","animations","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","animation1","barOne","mergesort","class","className","onClick","id","type","onChange","handleChange","bind","e","disabled","selected","hidden","visualize","map","idx","width","Component","bar_num","alert","App","isMobile","window","innerWidth","innerHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d9cc2597.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export function selection(array)\r\n{\r\n   const animation=[];\r\n    for(let i=0;i<array.length;i++)\r\n    {\r\n        var min=i;\r\n        for(let j=i;j<array.length;j++)\r\n        {\r\n            animation.push([\"compare1\",j,min]);\r\n            animation.push([\"compare2\",j,min]);\r\n            if(array[min]>array[j])\r\n            {\r\n                \r\n                min=j;\r\n                \r\n            }\r\n        }\r\n        animation.push([\"swap1\",min,array[i]]);\r\n        animation.push([\"swap2\",i,array[min]]);\r\n        var temp=array[min];\r\n        array[min]=array[i];\r\n        array[i]=temp;\r\n    }\r\n    console.log(\"\"+array);\r\n    return animation;\r\n}","export function getMergeSortAnimations(array)\r\n{\r\n    const animation=[];\r\n    if(array.length<=1)\r\n    {\r\n        return array;\r\n    }\r\n    const auxilaryArray=array.slice();\r\n    console.log(\"auxillary Array:\"+auxilaryArray);\r\n    mergesortHelper(array,0,array.length-1,auxilaryArray,animation);\r\n    return animation;\r\n\r\n}\r\nfunction mergesortHelper(mainArray,startIdx,endIdx,auxilaryArray,animation)\r\n{\r\n    if(startIdx===endIdx)\r\n    {\r\n        return ;\r\n    }\r\n    const middle=Math.floor((startIdx+endIdx)/2);\r\n    mergesortHelper(auxilaryArray,startIdx,middle,mainArray,animation);\r\n    mergesortHelper(auxilaryArray,middle+1,endIdx,mainArray,animation);\r\n    domerge(mainArray,startIdx,middle,endIdx,auxilaryArray,animation);\r\n}\r\nfunction domerge(mainArray,startIdx,middleIdx,endIdx,auxilaryArray,animation)\r\n{\r\n    let k=startIdx;\r\n    let i=startIdx;\r\n    let j=middleIdx+1;\r\n\r\n   \r\n    while(i<=middleIdx && j<=endIdx)\r\n    {\r\n            animation.push([i,j]);\r\n            animation.push([i,j]);\r\n            if(auxilaryArray[i]<auxilaryArray[j])\r\n            {\r\n                animation.push([k,auxilaryArray[i]]);\r\n                mainArray[k++]=auxilaryArray[i++];\r\n            }\r\n            else{\r\n                animation.push([k,auxilaryArray[j]]);\r\n                mainArray[k++]=auxilaryArray[j++];\r\n            }\r\n    }\r\n    while(i<=middleIdx)\r\n    {\r\n        animation.push([i,i]);\r\n        animation.push([i,i]);\r\n        animation.push([k,auxilaryArray[i]]);\r\n        mainArray[k++]=auxilaryArray[i++];\r\n    }\r\n    while(j<=endIdx)\r\n    {\r\n        animation.push([j,j]);\r\n        animation.push([j,j]);\r\n        animation.push([k,auxilaryArray[j]]);\r\n        mainArray[k++]=auxilaryArray[j++];\r\n    }\r\n    console.log(\"main Array:\"+mainArray);\r\n    console.log(\"aux array:\"+auxilaryArray);\r\n}","import React, { Component } from \"react\";\r\nimport \"./Visualizer.css\";\r\nimport { selection } from \"../Algorithm/SelectionSort\";\r\nimport { getMergeSortAnimations } from \"../Algorithm/MergeSort\";\r\n\r\nexport default class Visualizer extends Component {\r\n  state = {\r\n    selectSpeedType: \"\",\r\n    selectAlgo: \"\",\r\n    Array_bar_width: 1,\r\n    slider_value: 50,\r\n    select1: \"\",\r\n    select2: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    var num = event.target.value;\r\n    this.setState({ slider_value: event.target.value });\r\n    this.resetArray(num);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ selectSpeedType: \"null\" });\r\n    this.setState({ selectAlgo: \"null\" });\r\n    this.setState({ select1: \"false\" });\r\n\r\n    this.setState({ slider_value: 50 });\r\n    this.resetArray(50);\r\n  }\r\n  resetArray(num) {\r\n    const array = [];\r\n\r\n    var slider = document.getElementById(\"myRange\");\r\n\r\n    for (let i = 0; i < num; i++) {\r\n      array.push(randomInterval(5, 500));\r\n    }\r\n    this.setState({ array });\r\n\r\n    if (num < 10) {\r\n      this.setState({ Array_bar_width: 80 });\r\n    } else if (num > 10 && num <= 20) {\r\n      this.setState({ Array_bar_width: 40 });\r\n    } else if (num > 20 && num <= 30) {\r\n      this.setState({ Array_bar_width: 20 });\r\n    } else if (num > 30 && num <= 40) {\r\n      this.setState({ Array_bar_width: 15 });\r\n    } else if (num > 40 && num <= 50) {\r\n      this.setState({ Array_bar_width: 10 });\r\n    } else if (num > 50 && num <= 60) {\r\n      this.setState({ Array_bar_width: 8 });\r\n    } else if (num > 60 && num <= 70) {\r\n      this.setState({ Array_bar_width: 5 });\r\n    } else if (num > 70 && num <= 80) {\r\n      this.setState({ Array_bar_width: 4 });\r\n    } else if (num > 80 && num < 90) {\r\n      this.setState({ Array_bar_width: 3 });\r\n    } else if (num > 90 && num < 100) {\r\n      this.setState({ Array_bar_width: 2 });\r\n    }\r\n  }\r\n  mergesort() {\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    console.log(\"\" + animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? \"red\" : \"turquoise\";\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.selectSpeedType);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * this.state.selectSpeedType);\r\n      }\r\n    }\r\n  }\r\n  selection() {\r\n    const animation1 = selection(this.state.array);\r\n    const array = this.state.array;\r\n\r\n    for (let i = 0; i < animation1.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (animation1[i][0] === \"compare1\" || animation1[i][0] === \"compare2\") {\r\n        const color = animation1[i][0] === \"compare1\" ? \"red\" : \"turquoise\";\r\n        const [temp, barOneIdx, barTwoIdx] = animation1[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.selectSpeedType);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [temp, barOne, newHeight] = animation1[i];\r\n          const barOneStyle = arrayBars[barOne].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * this.state.selectSpeedType);\r\n      }\r\n    }\r\n  }\r\n  visualize() {\r\n    console.log(\"speed:\" + this.state.slider_value);\r\n    console.log(\"algorithm:\" + this.state.selectAlgo);\r\n    if (this.state.selectAlgo === \"select\") {\r\n      this.selection();\r\n    } else if (this.state.selectAlgo === \"merge\") {\r\n      this.mergesort();\r\n    }\r\n    console.log(this.state.selectSpeedType);\r\n    if (\r\n      this.state.selectSpeedType === \"null\" ||\r\n      this.state.selectAlgo === \"null\"\r\n    ) {\r\n      console.log(\"check\");\r\n      console.log(\"\" + this.state.select1);\r\n      this.setState({ select1: \"false\" });\r\n    } else {\r\n      console.log(\"success\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n    return (\r\n      <div>\r\n        <div class=\"header\">\r\n          <div class=\"row\">\r\n            <div class=\"col-1\"></div>\r\n            <div class=\"col-5\">\r\n              <div class=\"col-5\">\r\n                {\" \"}\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => this.resetArray(this.state.slider_value)}\r\n                >\r\n                  Generate random array\r\n                </button>\r\n              </div>\r\n              <div class=\"col-7\">\r\n                <div className=\"slider\">\r\n                  <label id=\"l1\">Change Array Size</label>\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"5\"\r\n                    max=\"100\"\r\n                    id=\"myRange\"\r\n                    className=\"range\"\r\n                    onChange={this.handleChange.bind(this)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <div class=\"col-4\">\r\n                {\" \"}\r\n                <div className=\"selectdiv\">\r\n                  <select\r\n                    onChange={(e) =>\r\n                      this.setState({ selectSpeedType: e.target.value })\r\n                    }\r\n                  >\r\n                    <option disabled selected hidden>\r\n                      {\" \"}\r\n                      Speed{\" \"}\r\n                    </option>\r\n                    <option value=\"150\">Slow</option>\r\n                    <option value=\"50\">Medium</option>\r\n                    <option value=\"10\">Fast</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div className=\"selectdiv\">\r\n                  <select\r\n                    onChange={(e) =>\r\n                      this.setState({ selectAlgo: e.target.value })\r\n                    }\r\n                  >\r\n                    <option disabled selected hidden>\r\n                      {\" \"}\r\n                      Select Algorithm{\" \"}\r\n                    </option>\r\n                    <option value=\"merge\">MergeSort</option>\r\n                    <option value=\"select\">SelectionSort</option>\r\n                    {/* <option value=\"bubble\">BubbleSort</option> */}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-2\">\r\n                <button\r\n                  className={\r\n                    this.state.select1 === \"false\" ? \"visual\" : \"visual1\"\r\n                  }\r\n                  onClick={() => this.visualize()}\r\n                >\r\n                  Visualize!!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div className=\"array_container\">\r\n            {array.map((value, idx) => (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={idx}\r\n                style={{\r\n                  height: `${value}px`,\r\n                  width: `${this.state.Array_bar_width}px`,\r\n                  backgroundColor: \"#40E0D0\",\r\n                }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction randomInterval(min, max) {\r\n  //return random number between min and max\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Visualizer.css\";\r\nimport { selection } from \"../Algorithm/SelectionSort\";\r\nimport { getMergeSortAnimations } from \"../Algorithm/MergeSort\";\r\n\r\nexport default class Visualizer extends Component {\r\n  state = {\r\n    selectSpeedType: \"\",\r\n    selectAlgo: \"\",\r\n    Array_bar_width: 1,\r\n    slider_value: 50,\r\n    select1: \"\",\r\n    select2: \"\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      array: [],\r\n      bar_num: 15,\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    var num = event.target.value;\r\n    this.setState({ slider_value: event.target.value });\r\n    this.resetArray(num);\r\n  }\r\n  componentDidMount() {\r\n    alert(\"please prefer Desktop or Laptop for Best Visualiztion\");\r\n    this.setState({ selectSpeedType: \"null\" });\r\n    this.setState({ selectAlgo: \"null\" });\r\n    this.setState({ select1: \"false\" });\r\n    this.setState({ slider_value: 50 });\r\n    this.resetArray(50);\r\n  }\r\n  resetArray(num) {\r\n    this.setState({ bar_num: 15 });\r\n    const array = [];\r\n\r\n    var slider = document.getElementById(\"myRange\");\r\n    console.log(\"bar_num:\" + this.state.bar_num);\r\n    for (let i = 0; i < this.state.bar_num; i++) {\r\n      array.push(randomInterval(5, 500));\r\n    }\r\n    this.setState({ array });\r\n\r\n    if (num > 20 && num <= 30) {\r\n      this.setState({ Array_bar_width: 20 });\r\n      this.setState({ bar_num: 15 });\r\n    } else if (num > 30 && num <= 40) {\r\n      this.setState({ Array_bar_width: 15 });\r\n      this.setState({ bar_num: 20 });\r\n    } else if (num > 40 && num <= 50) {\r\n      this.setState({ Array_bar_width: 10 });\r\n      this.setState({ bar_num: 25 });\r\n    } else if (num > 50 && num <= 60) {\r\n      this.setState({ Array_bar_width: 8 });\r\n      this.setState({ bar_num: 30 });\r\n    } else if (num > 60 && num <= 70) {\r\n      this.setState({ Array_bar_width: 5 });\r\n      this.setState({ bar_num: 35 });\r\n    } else if (num > 70 && num <= 80) {\r\n      this.setState({ Array_bar_width: 4 });\r\n      this.setState({ bar_num: 40 });\r\n    } else if (num > 80 && num < 90) {\r\n      this.setState({ Array_bar_width: 3 });\r\n      this.setState({ bar_num: 50 });\r\n    } else if (num > 90 && num < 100) {\r\n      this.setState({ Array_bar_width: 2 });\r\n      this.setState({ bar_num: 50 });\r\n    }\r\n  }\r\n  mergesort() {\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    console.log(\"\" + animations);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? \"red\" : \"turquoise\";\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.selectSpeedType);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * this.state.selectSpeedType);\r\n      }\r\n    }\r\n  }\r\n  selection() {\r\n    const animation1 = selection(this.state.array);\r\n    const array = this.state.array;\r\n\r\n    for (let i = 0; i < animation1.length; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      if (animation1[i][0] === \"compare1\" || animation1[i][0] === \"compare2\") {\r\n        const color = animation1[i][0] === \"compare1\" ? \"red\" : \"turquoise\";\r\n        const [temp, barOneIdx, barTwoIdx] = animation1[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * this.state.selectSpeedType);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [temp, barOne, newHeight] = animation1[i];\r\n          const barOneStyle = arrayBars[barOne].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * this.state.selectSpeedType);\r\n      }\r\n    }\r\n  }\r\n  visualize() {\r\n    console.log(\"speed:\" + this.state.slider_value);\r\n    console.log(\"algorithm:\" + this.state.selectAlgo);\r\n    if (this.state.selectAlgo === \"select\") {\r\n      this.selection();\r\n    } else if (this.state.selectAlgo === \"merge\") {\r\n      this.mergesort();\r\n    }\r\n    console.log(this.state.selectSpeedType);\r\n    if (\r\n      this.state.selectSpeedType === \"null\" ||\r\n      this.state.selectAlgo === \"null\"\r\n    ) {\r\n      console.log(\"check\");\r\n      console.log(\"\" + this.state.select1);\r\n      this.setState({ select1: \"false\" });\r\n    } else {\r\n      console.log(\"success\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { array } = this.state;\r\n    return (\r\n      <div>\r\n        <div class=\"header\">\r\n          <div class=\"row\">\r\n            <div class=\"col-1\"></div>\r\n            <div class=\"col-5\">\r\n              <div class=\"col-5\">\r\n                {\" \"}\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={() => this.resetArray(this.state.slider_value)}\r\n                >\r\n                  Generate random array\r\n                </button>\r\n              </div>\r\n              <div class=\"col-7\">\r\n                <div className=\"slider\">\r\n                  <label id=\"l1\">Change Array Size</label>\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"5\"\r\n                    max=\"100\"\r\n                    id=\"myRange\"\r\n                    className=\"range\"\r\n                    onChange={this.handleChange.bind(this)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <div class=\"col-4\">\r\n                {\" \"}\r\n                <div className=\"selectdiv\">\r\n                  <select\r\n                    onChange={(e) =>\r\n                      this.setState({ selectSpeedType: e.target.value })\r\n                    }\r\n                  >\r\n                    <option disabled selected hidden>\r\n                      {\" \"}\r\n                      Speed{\" \"}\r\n                    </option>\r\n                    <option value=\"150\">Slow</option>\r\n                    <option value=\"50\">Medium</option>\r\n                    <option value=\"10\">Fast</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div className=\"selectdiv\">\r\n                  <select\r\n                    onChange={(e) =>\r\n                      this.setState({ selectAlgo: e.target.value })\r\n                    }\r\n                  >\r\n                    <option disabled selected hidden>\r\n                      {\" \"}\r\n                      Select Algorithm{\" \"}\r\n                    </option>\r\n                    <option value=\"merge\">MergeSort</option>\r\n                    <option value=\"select\">SelectionSort</option>\r\n                    {/* <option value=\"bubble\">BubbleSort</option> */}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-2\">\r\n                <button\r\n                  className={\r\n                    this.state.select1 === \"false\" ? \"visual\" : \"visual1\"\r\n                  }\r\n                  onClick={() => this.visualize()}\r\n                >\r\n                  Visualize!!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div className=\"array_container\">\r\n            {array.map((value, idx) => (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={idx}\r\n                style={{\r\n                  height: `${value}px`,\r\n                  width: `${this.state.Array_bar_width}px`,\r\n                  backgroundColor: \"#40E0D0\",\r\n                }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction randomInterval(min, max) {\r\n  //return random number between min and max\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Visualizer from './Component/Visualizer.jsx'\nimport Mobile_visualizer from './Component/Mobile_visualizer.jsx'\nimport { render } from '@testing-library/react';\n\nfunction App() {\n  function isMobile()\n  {\n    return ( ( window.innerWidth <= 1000 ) && ( window.innerHeight <= 800 ) );\n  }\n    \n    return (\n      <div className=\"App\">\n        \n        {isMobile()?(<Mobile_visualizer/>):(<Visualizer/>)}\n      </div>\n    );\n    console.log(\"log\"+isMobile());\n  \n   \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}